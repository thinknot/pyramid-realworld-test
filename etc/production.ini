[pipeline:main]
pipeline =
    raven
    conduit

[filter:raven]
use = egg:raven#raven

[app:conduit]
use = egg:conduit

pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.includes =
    pyramid_force_https
    pyramid_heroku.client_addr
    pyramid_heroku.host

pyramid_heroku.structlog = true
pyramid_force_https.structlog = true

sqlalchemy.url = ${DATABASE_URL:?}

# validate that DB has been migrated to latest version before starting up
pyramid_deferred_sqla.check_db_migrated = ${CHECK_DB_MIGRATED:-true}

# we do this validation in functional tests, no need to do them
# every time app boots up
pyramid_openapi3.enable_endpoint_validation = ${ENABLE_ENDPOINT_VALIDATION:-false}


# secrets
jwt.secret = ${JWT_SECRET:?}

###
# wsgi server configuration
###

[server:main]
use = egg:gunicorn#main
preload = true
loglevel = info

###
# logging configuration
# http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/logging.html
###

[loggers]
keys = root, conduit, sentry

[handlers]
keys = console, sentry

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console, sentry

[logger_conduit]
level = INFO
handlers = console, sentry
qualname = conduit

[logger_sentry]
level = WARN
handlers = console
qualname = sentry.errors
propagate = 0

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[handler_sentry]
class = raven.handlers.logging.SentryHandler
args = ()
level = WARNING
formatter = generic

[formatter_generic]
format = %(message)s
